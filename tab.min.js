Vue.component("tabs",{template:'<div class="tab-switch" ref="tabSwitch" :class="{noTab: tabNames.length <= 1}">                    <div class="tab-switch-bar" v-show="tabNames.length > 1">                    <span :class="tabCls(item)" v-for="(item,index) in navList" @click="handleChange(index)">                    {{item.label}}                    <em :attr-name="item.badge" class="badge" v-if="item.badge">0</em>                    </span>                    <em class="active-line" :style="{left: activeStyleLeft}"></em>                    </div>                    <div class="tabs-content">                    <slot></slot>                    </div>                </div>',data:function(){return{navList:[],currentValue:this.value,touch:{startx:0,starty:0},tabNames:[]}},computed:{activeStyleLeft:function(){var t=0,a=this;this.tabNames.forEach(function(e,n){a.currentValue==e&&(t=n)});var e=this.$refs.tabSwitch;if(e){var n=e.offsetWidth/this.tabNames.length,s=(n-14)/2+t*n;return s+"px"}}},props:{value:{type:[String]},hash:{type:Boolean,default:!1},touch:{type:Boolean,default:!1}},methods:{getTabs:function(){var t=this;t.tabNames=[];var a=[];return this.$children.forEach(function(e,n){"pane"===e.$options.name&&(e.name=n,a.push(e),t.tabNames.push(e.name))}),a},updateNav:function(){this.navList=[];var t=this;this.getTabs().forEach(function(a,e){t.navList.push({label:a.label,badge:a.badge,name:a.name||e}),a.name||(a.name=e),0===e&&(t.currentValue||(t.currentValue=a.name||e))}),this.updateStatus()},updateStatus:function(){var t=this.getTabs(),a=this;t.forEach(function(t){return t.show=t.name==a.currentValue})},tabCls:function(t){return["item",{active:t.name==this.currentValue}]},handleChange:function(t){var a=this.navList[t],e=a.name;this.currentValue=e,this.$emit("tabchange",e),this.hash&&history.replaceState(null,"","#"+this.currentValue)},getTabName:function(t){var a=this,e="";return this.tabNames.forEach(function(n,s){if(a.currentValue==n){var i=s+t;i<0&&(i=0),i>=a.tabNames.length&&(i=a.tabNames.length-1),e=a.tabNames[i]}}),e},getTouchAngle:function(t,a){return 180*Math.atan2(a,t)/Math.PI},getTouchDirection:function(t,a,e,n){var s=e-t,i=n-a,u={angle:0,angx:s,angy:i};if(Math.abs(s)<2&&Math.abs(i)<2)return u;var h=this.getTouchAngle(s,i);return h>=-135&&h<=-45?u={angle:1,angx:s,angy:i}:h>45&&h<135?u={angle:2,angx:s,angy:i}:h>=135&&h<=180||h>=-180&&h<-135?u={angle:3,angx:s,angy:i}:h>=-45&&h<=45&&(u={angle:4,angx:s,angy:i}),u},listenTouch:function(){var t=this;document.addEventListener("touchstart",function(a){t.touch.startx=a.touches[0].pageX,t.touch.starty=a.touches[0].pageY},!1),document.addEventListener("touchend",function(a){var e,n;e=a.changedTouches[0].pageX,n=a.changedTouches[0].pageY;var s=t.getTouchDirection(t.touch.startx,t.touch.starty,e,n);3===s.angle&&t.handleChange(t.getTabName(1)),4===s.angle&&t.handleChange(t.getTabName(-1))},!1)}},mounted:function(){this.touch&&this.listenTouch()},watch:{value:function(t){this.currentValue=t},currentValue:function(){this.updateStatus()}}}),Vue.component("pane",{template:'<div class="pane" v-show="show"><slot></slot></div>',data:function(){return{show:!0}},props:{name:{type:String},label:{type:String,default:""},badge:{type:String,default:""}},methods:{updateNav:function(){this.$parent.updateNav()}},watch:{label:function(){this.updateNav()}},mounted:function(){this.updateNav()}});